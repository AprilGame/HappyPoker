/*
	Generated by KBEngine!
	Please do not modify this file!
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;



	public class DATATYPE_ENTITYLIST : DATATYPE_BASE
	{
		public ENTITYLIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			ENTITYLIST datas = new ENTITYLIST();

			while(size > 0)
			{
				--size;
				datas.Add(stream.readEntitycall());
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, ENTITYLIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				stream.writeEntitycall(v[i]);
			};
		}
	}



	public class DATATYPE_POKERLIST : DATATYPE_BASE
	{
		public POKERLIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			POKERLIST datas = new POKERLIST();

			while(size > 0)
			{
				--size;
				datas.Add(stream.readInt8());
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, POKERLIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				stream.writeInt8(v[i]);
			};
		}
	}



	public class DATATYPE_FRIENDLIST : DATATYPE_BASE
	{
		public FRIENDLIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			FRIENDLIST datas = new FRIENDLIST();

			while(size > 0)
			{
				--size;
				datas.Add(stream.readUint64());
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, FRIENDLIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				stream.writeUint64(v[i]);
			};
		}
	}



	public class DATATYPE_ENTITYDATA : DATATYPE_BASE
	{
		public ENTITYDATA createFromStreamEx(MemoryStream stream)
		{
			ENTITYDATA datas = new ENTITYDATA();
			datas.playerName = stream.readUnicode();
			datas.playerBean = stream.readInt32();
			datas.roomIndex = stream.readUint8();
			datas.playerID = stream.readUint64();
			return datas;
		}

		public void addToStreamEx(Bundle stream, ENTITYDATA v)
		{
			stream.writeUnicode(v.playerName);
			stream.writeInt32(v.playerBean);
			stream.writeUint8(v.roomIndex);
			stream.writeUint64(v.playerID);
		}
	}



	public class DATATYPE_MAILDATA : DATATYPE_BASE
	{
		public MAILDATA createFromStreamEx(MemoryStream stream)
		{
			MAILDATA datas = new MAILDATA();
			datas.senderID = stream.readUint64();
			datas.senderName = stream.readUnicode();
			datas.recverID = stream.readUint64();
			return datas;
		}

		public void addToStreamEx(Bundle stream, MAILDATA v)
		{
			stream.writeUint64(v.senderID);
			stream.writeUnicode(v.senderName);
			stream.writeUint64(v.recverID);
		}
	}



	public class DATATYPE_FRIENDDATA : DATATYPE_BASE
	{
		public FRIENDDATA createFromStreamEx(MemoryStream stream)
		{
			FRIENDDATA datas = new FRIENDDATA();
			datas.status = stream.readUint8();
			datas.playerID = stream.readUint64();
			datas.playerName = stream.readUnicode();
			datas.playerBean = stream.readInt32();
			datas.playerEntity = stream.readEntitycall();
			return datas;
		}

		public void addToStreamEx(Bundle stream, FRIENDDATA v)
		{
			stream.writeUint8(v.status);
			stream.writeUint64(v.playerID);
			stream.writeUnicode(v.playerName);
			stream.writeInt32(v.playerBean);
			stream.writeEntitycall(v.playerEntity);
		}
	}



	public class DATATYPE_SYNCHRODATA : DATATYPE_BASE
	{
		public SYNCHRODATA createFromStreamEx(MemoryStream stream)
		{
			SYNCHRODATA datas = new SYNCHRODATA();
			datas.senderID = stream.readUint64();
			datas.recverID = stream.readUint64();
			return datas;
		}

		public void addToStreamEx(Bundle stream, SYNCHRODATA v)
		{
			stream.writeUint64(v.senderID);
			stream.writeUint64(v.recverID);
		}
	}



	public class DATATYPE_MAILLIST : DATATYPE_BASE
	{
		private DATATYPE_MAILDATA itemType = new DATATYPE_MAILDATA();

		public MAILLIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			MAILLIST datas = new MAILLIST();

			while(size > 0)
			{
				--size;
				datas.Add(itemType.createFromStreamEx(stream));
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, MAILLIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				itemType.addToStreamEx(stream, v[i]);
			};
		}
	}



	public class DATATYPE_FRIENDDATALIST : DATATYPE_BASE
	{
		private DATATYPE_FRIENDDATA itemType = new DATATYPE_FRIENDDATA();

		public FRIENDDATALIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			FRIENDDATALIST datas = new FRIENDDATALIST();

			while(size > 0)
			{
				--size;
				datas.Add(itemType.createFromStreamEx(stream));
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, FRIENDDATALIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				itemType.addToStreamEx(stream, v[i]);
			};
		}
	}



	public class DATATYPE_SYNCHRODATALIST : DATATYPE_BASE
	{
		private DATATYPE_SYNCHRODATA itemType = new DATATYPE_SYNCHRODATA();

		public SYNCHRODATALIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			SYNCHRODATALIST datas = new SYNCHRODATALIST();

			while(size > 0)
			{
				--size;
				datas.Add(itemType.createFromStreamEx(stream));
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, SYNCHRODATALIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				itemType.addToStreamEx(stream, v[i]);
			};
		}
	}


}